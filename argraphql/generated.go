// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package argraphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetTransactionResponse is returned by GetTransaction on success.
type GetTransactionResponse struct {
	Transaction GetTransactionTransaction `json:"transaction"`
}

// GetTransaction returns GetTransactionResponse.Transaction, and is useful for accessing the field via an interface.
func (v *GetTransactionResponse) GetTransaction() GetTransactionTransaction { return v.Transaction }

// GetTransactionTransaction includes the requested fields of the GraphQL type Transaction.
type GetTransactionTransaction struct {
	Id        string                                   `json:"id"`
	Anchor    string                                   `json:"anchor"`
	Signature string                                   `json:"signature"`
	Recipient string                                   `json:"recipient"`
	Owner     GetTransactionTransactionOwner           `json:"owner"`
	Fee       GetTransactionTransactionFeeAmount       `json:"fee"`
	Quantity  GetTransactionTransactionQuantityAmount  `json:"quantity"`
	Data      GetTransactionTransactionDataMetaData    `json:"data"`
	Tags      []GetTransactionTransactionTagsTag       `json:"tags"`
	Block     GetTransactionTransactionBlock           `json:"block"`
	BundledIn GetTransactionTransactionBundledInBundle `json:"bundledIn"`
}

// GetId returns GetTransactionTransaction.Id, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetId() string { return v.Id }

// GetAnchor returns GetTransactionTransaction.Anchor, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetAnchor() string { return v.Anchor }

// GetSignature returns GetTransactionTransaction.Signature, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetSignature() string { return v.Signature }

// GetRecipient returns GetTransactionTransaction.Recipient, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetRecipient() string { return v.Recipient }

// GetOwner returns GetTransactionTransaction.Owner, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetOwner() GetTransactionTransactionOwner { return v.Owner }

// GetFee returns GetTransactionTransaction.Fee, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetFee() GetTransactionTransactionFeeAmount { return v.Fee }

// GetQuantity returns GetTransactionTransaction.Quantity, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetQuantity() GetTransactionTransactionQuantityAmount {
	return v.Quantity
}

// GetData returns GetTransactionTransaction.Data, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetData() GetTransactionTransactionDataMetaData { return v.Data }

// GetTags returns GetTransactionTransaction.Tags, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetTags() []GetTransactionTransactionTagsTag { return v.Tags }

// GetBlock returns GetTransactionTransaction.Block, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetBlock() GetTransactionTransactionBlock { return v.Block }

// GetBundledIn returns GetTransactionTransaction.BundledIn, and is useful for accessing the field via an interface.
func (v *GetTransactionTransaction) GetBundledIn() GetTransactionTransactionBundledInBundle {
	return v.BundledIn
}

// GetTransactionTransactionBlock includes the requested fields of the GraphQL type Block.
type GetTransactionTransactionBlock struct {
	Id        string `json:"id"`
	Timestamp int    `json:"timestamp"`
	Height    int    `json:"height"`
	Previous  string `json:"previous"`
}

// GetId returns GetTransactionTransactionBlock.Id, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionBlock) GetId() string { return v.Id }

// GetTimestamp returns GetTransactionTransactionBlock.Timestamp, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionBlock) GetTimestamp() int { return v.Timestamp }

// GetHeight returns GetTransactionTransactionBlock.Height, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionBlock) GetHeight() int { return v.Height }

// GetPrevious returns GetTransactionTransactionBlock.Previous, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionBlock) GetPrevious() string { return v.Previous }

// GetTransactionTransactionBundledInBundle includes the requested fields of the GraphQL type Bundle.
type GetTransactionTransactionBundledInBundle struct {
	Id string `json:"id"`
}

// GetId returns GetTransactionTransactionBundledInBundle.Id, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionBundledInBundle) GetId() string { return v.Id }

// GetTransactionTransactionDataMetaData includes the requested fields of the GraphQL type MetaData.
type GetTransactionTransactionDataMetaData struct {
	Type string `json:"type"`
	Size string `json:"size"`
}

// GetType returns GetTransactionTransactionDataMetaData.Type, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionDataMetaData) GetType() string { return v.Type }

// GetSize returns GetTransactionTransactionDataMetaData.Size, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionDataMetaData) GetSize() string { return v.Size }

// GetTransactionTransactionFeeAmount includes the requested fields of the GraphQL type Amount.
type GetTransactionTransactionFeeAmount struct {
	Winston string `json:"winston"`
	Ar      string `json:"ar"`
}

// GetWinston returns GetTransactionTransactionFeeAmount.Winston, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionFeeAmount) GetWinston() string { return v.Winston }

// GetAr returns GetTransactionTransactionFeeAmount.Ar, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionFeeAmount) GetAr() string { return v.Ar }

// GetTransactionTransactionOwner includes the requested fields of the GraphQL type Owner.
type GetTransactionTransactionOwner struct {
	Address string `json:"address"`
	Key     string `json:"key"`
}

// GetAddress returns GetTransactionTransactionOwner.Address, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionOwner) GetAddress() string { return v.Address }

// GetKey returns GetTransactionTransactionOwner.Key, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionOwner) GetKey() string { return v.Key }

// GetTransactionTransactionQuantityAmount includes the requested fields of the GraphQL type Amount.
type GetTransactionTransactionQuantityAmount struct {
	Winston string `json:"winston"`
	Ar      string `json:"ar"`
}

// GetWinston returns GetTransactionTransactionQuantityAmount.Winston, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionQuantityAmount) GetWinston() string { return v.Winston }

// GetAr returns GetTransactionTransactionQuantityAmount.Ar, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionQuantityAmount) GetAr() string { return v.Ar }

// GetTransactionTransactionTagsTag includes the requested fields of the GraphQL type Tag.
type GetTransactionTransactionTagsTag struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns GetTransactionTransactionTagsTag.Name, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionTagsTag) GetName() string { return v.Name }

// GetValue returns GetTransactionTransactionTagsTag.Value, and is useful for accessing the field via an interface.
func (v *GetTransactionTransactionTagsTag) GetValue() string { return v.Value }

// __GetTransactionInput is used internally by genqlient
type __GetTransactionInput struct {
	Id string `json:"id"`
}

// GetId returns __GetTransactionInput.Id, and is useful for accessing the field via an interface.
func (v *__GetTransactionInput) GetId() string { return v.Id }

// The query or mutation executed by GetTransaction.
const GetTransaction_Operation = `
query GetTransaction ($id: ID!) {
	transaction(id: $id) {
		id
		anchor
		signature
		recipient
		owner {
			address
			key
		}
		fee {
			winston
			ar
		}
		quantity {
			winston
			ar
		}
		data {
			type
			size
		}
		tags {
			name
			value
		}
		block {
			id
			timestamp
			height
			previous
		}
		bundledIn {
			id
		}
	}
}
`

// Write your query or mutation here
func GetTransaction(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetTransactionResponse, error) {
	req := &graphql.Request{
		OpName: "GetTransaction",
		Query:  GetTransaction_Operation,
		Variables: &__GetTransactionInput{
			Id: id,
		},
	}
	var err error

	var data GetTransactionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
